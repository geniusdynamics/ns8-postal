#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
from jinja2 import Environment, FileSystemLoader, select_autoescape
import agent
import secrets

# Set up Jinja2 environment
jenv = Environment(
    loader=FileSystemLoader(os.getenv("AGENT_INSTALL_DIR") + "/templates"),
    autoescape=select_autoescape(),
    keep_trailing_newline=True,
)
jenv_custom = Environment(
    loader=FileSystemLoader(os.getenv("AGENT_INSTALL_DIR") + "/state/templates"),
    autoescape=select_autoescape(),
    keep_trailing_newline=True,
)

# Load postal.env if available
postal_env = agent.read_envfile("postal.env") if os.path.exists("postal.env") else {}

# Load mariadb.env if available
mariadb_env = (
    agent.read_envfile("database.env") if os.path.exists("database.env") else {}
)

appdb_env = agent.read_envfile("app-db.env") if os.path.exists("app-db.env") else {}

# Gather all required properties from environment
properties = {
    "main_db_host": postal_env.get("MAIN_DB_HOST", "mariadb-app"),
    "message_db_host": appdb_env.get("MESSAGE_DB_HOST", "mariadb-app"),
    "mariadb_user": mariadb_env.get("MARIADB_USER", "postal"),
    "mariadb_root_password": mariadb_env.get("MARIADB_ROOT_PASSWORD", "rootpassword"),
    "mariadb_database": mariadb_env.get("MARIADB_DATABASE", "postal"),
    "app_url": postal_env.get("APP_URL", "postal.example.com"),
    "tcp_port": postal_env.get("TCP_PORT", "25"),
    "username": postal_env.get("USERNAME", "user"),
    "password": postal_env.get("PASSWORD", "pass"),
    "fromname": postal_env.get("FROMNAME", "Postal"),
    "fromaddress": postal_env.get("FROMADDRESS", "postal@localhost"),
    "secretkey": appdb_env.get("SECRETKEY"),
}

# Derived DNS-related properties
properties.update(
    {
        "mx_record": f"postal.{properties['app_url']}",
        "smtp_server_hostname": f"postal.{properties['app_url']}",
        "spf_include": f"spf.{properties['app_url']}",
        "return_path": f"rp.{properties['app_url']}",
        "route_domain": f"routes.{properties['app_url']}",
        "track_domain": f"postal.{properties['app_url']}",
    }
)

# Render the template

template = jenv.get_template("postal.yml.j2")
output = template.render(properties)

# Write the output to postal.yml
with open("config/postal.yml", "w") as f:
    f.write(output)

print("postal.yml written successfully:", os.path.realpath("postal.yml"))

caddy_template = jenv.get_template("Caddyfile.j2")
caddy_output = caddy_template.render(properties)

# Write the output to Caddyfile
with open("Caddyfile", "w") as f:
    f.write(caddy_output)

print("Caddyfile written successfully:", os.path.realpath("Caddyfile"))
